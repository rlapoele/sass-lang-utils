/// Adds a _separator_ item between each list item recursively.
/// @group list
/// @since 1.0.0
/// @param {list} $list - the list to be processed
/// @param {any} $separator - the thing to be inserted between each list item
/// @returns {list} an empty list if the original list is empty, the original list if it contains only 1 item or, finally, a new list where all original items are separated by a _separator_ item. Sub-lists will have received the same treatment.
@function slu-list-split-deep($list, $separator) {
  $_list-length: length($list);
  @if (0 == $_list-length) { @return $list; }
  @if (1 == $_list-length) {
    @if ('list' == type-of($list)) {
      @return (slu-list-split-deep(nth($list,1), $separator),);
    }
    @else {
      @return $list;
    }
  }
  $_list: nth($list,1);
  @if ('list' == type-of($_list)) {
    $_list: (slu-list-split-deep($_list, $separator),);
  }
  $_list-separator: list-separator($list);
  @for $_i from 2 to $_list-length + 1 {
    $_list-item: nth($list, $_i);
    @if ('list' == type-of($_list-item)) {
      $_list-item: slu-list-split-deep($_list-item, $separator);
    }
    $_list: append($_list, $separator, $_list-separator);
    $_list: append($_list, $_list-item, $_list-separator);
  }
  @return $_list;
}
